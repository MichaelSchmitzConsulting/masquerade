<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>masquerade.sim</groupId>
	<artifactId>masquerade.sim.application</artifactId>
	<packaging>bundle</packaging>
	<version>2.0.0</version>
	<name>Masquerade Application Bundle</name>

	<parent>
		<groupId>masquerade.sim</groupId>
		<artifactId>masquerade.sim.pom</artifactId>
		<version>2.0.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<dependencies>
		<!-- Felix OSGi -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.framework</artifactId>
			<scope>provided</scope><!-- Referencing container -->
		</dependency>
		<!-- Felix OSGi Bridge bundle -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.http.bridge</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- Felix OSGi declarative service annotations -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr.annotations</artifactId>
			<scope>provided</scope><!-- Not required at runtime -->
		</dependency>
		<!-- Felix OSGi service component runtime (for ComponentContext import) -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- commons-lang -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- Vaadin -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>customfield</artifactId><!-- Required here for inclusion in 
				widgetset compilation -->
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>codemirror2</artifactId><!-- Required here for inclusion in 
				widgetset compilation -->
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- Masquerade Model bundle -->
		<dependency>
			<groupId>masquerade.sim</groupId>
			<artifactId>masquerade.sim.model</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope><!-- Referencing exported system package -->
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Java Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- OSGi Bundle Plugin -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<configuration>
					<instructions>
						<!-- Prevent importing GWT client packages unused at runtime, referenced 
							somewhere and found by bnd -->
						<Import-Package>
							!com.google.gwt.core.client,
							!com.google.gwt.user.client,
							*,
						</Import-Package>
						<!-- Vaadin theme resources - specified as DynamicImport because 1.) 
							wildcard support - these packages change from Vaadin version to version 2.) 
							not found by Bnd because of being loaded dynamically -->
						<DynamicImport-Package>VAADIN.*</DynamicImport-Package>
						<!-- Embed Vaadin Add-Ons that do not provide OSGi metadata -->
						<Embed-Dependency>*;artifactId=codemirror2|customfield</Embed-Dependency>
						<_exportcontents>org.vaadin.addon.*,org.vaadin.codemirror2.*</_exportcontents>
					</instructions>
				</configuration>
			</plugin>
			<!-- Felix Declarative Services Descriptor Generator Plugin -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-scr-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<!-- If a new widgetset is added, run 'rm -rf src/main/resources/VAADIN && mvn -Pcompile-widgetset clean package' -->
	<profiles>
		<profile>
			<id>compile-widgetset</id>
			<build>
				<plugins>
					<!-- Updates Vaadin 6.2+ widgetset definitions based on project dependencies -->
					<plugin>
						<groupId>com.vaadin</groupId>
						<artifactId>vaadin-maven-plugin</artifactId>
					</plugin>
					<!-- Compiles your custom GWT components with the GWT compiler -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<configuration>
							<webappDirectory>src/main/resources/VAADIN/widgetsets</webappDirectory>
							<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
							<runTarget>clean</runTarget>
							<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
							<noServer>true</noServer>
							<port>8080</port>
							<soyc>false</soyc>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>resources</goal>
									<goal>compile</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<scm>
		<connection>scm:git:git@github.com:matf/masquerade-app.git
		</connection>
		<url>scm:git:git@github.com:matf/masquerade-app.git</url>
		<developerConnection>scm:git:git@github.com:matf/masquerade-app.git
		</developerConnection>
	</scm>
</project>
