<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>masquerade.sim</groupId>
	<artifactId>masquerade.sim.core</artifactId>
	<packaging>bundle</packaging>
	<version>2.0.0</version>
	<name>Masquerade Core Bundle</name>

	<parent>
		<groupId>masquerade.sim</groupId>
		<artifactId>masquerade.sim.pom</artifactId>
		<version>2.0.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<dependencies>
		<!-- Felix OSGi -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.framework</artifactId>
			<scope>provided</scope><!-- Referencing OSGi framework -->
		</dependency>
		<!-- Felix OSGi Bridge bundle -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.http.bridge</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- Felix OSGi declarative service annotations -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr.annotations</artifactId>
			<scope>provided</scope><!-- Not required at runtime -->
		</dependency>
		<!-- Felix OSGi service component runtime (for ComponentContext import) -->
		<dependency>
			<groupId>org.apache.felix</groupId>
			<artifactId>org.apache.felix.scr</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- commons-lang -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- javax.mail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- Masquerade Model bundle -->
		<dependency>
			<groupId>masquerade.sim</groupId>
			<artifactId>masquerade.sim.model</artifactId>
			<scope>provided</scope><!-- Referencing bundle -->
		</dependency>
		<!-- Servlet API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope><!-- Referencing exported system package -->
		</dependency>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!--  EasyMock -->
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Java Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- OSGi Bundle Plugin -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<configuration>
					<instructions>
						<!-- db4o loads model classes through this bundle's classloader, so 
							it needs to be able to see model classes from plugins. Thus using DynamicImport-Package. -->
						<DynamicImport-Package>*</DynamicImport-Package>
					</instructions>
				</configuration>
			</plugin>
			<!-- Felix Declarative Services Descriptor Generator Plugin -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-scr-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<scm>
		<connection>scm:git:git@github.com:matf/masquerade.sim.core.git
		</connection>
		<url>scm:git:git@github.com:matf/masquerade.sim.core.git</url>
		<developerConnection>scm:git:git@github.com:matf/masquerade.sim.core.git
		</developerConnection>
	</scm>
</project>
