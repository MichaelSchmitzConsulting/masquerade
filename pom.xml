<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>masquerade.sim</groupId>
	<artifactId>masquerade</artifactId>
	<packaging>war</packaging>
	<version>0.1</version>
	<name>Masquerade Simulator</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>
			<!-- Java Compiler -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Maven WAR plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>run.Main</mainClass>
						</manifest>
					</archive>
					<webResources>
						<resource>
							<!-- this is relative to the pom.xml directory -->
							<directory>target/classes</directory>
							<!-- Include the Main class to run the war standalone using jetty 
								with java -jar masquerade.war -->
							<includes>
								<include>run/*.class</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- A simple Jetty test server at http://localhost:8080/masquerade can 
				be launched with the Maven goal jetty:run and stopped with jetty:stop -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>7.3.1.v20110307</version>
				<configuration>
					<stopPort>9966</stopPort>
					<stopKey>masquerade</stopKey>
					<!-- Redeploy every x seconds if changes are detected, 0 for no automatic 
						redeployment -->
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<!-- make sure Jetty also finds the widgetset -->
					<webAppConfig>
						<contextPath>/masquerade</contextPath>
						<baseResource implementation="org.mortbay.resource.ResourceCollection">
							<resources>src/main/webapp,${project.build.directory}/${project.build.finalName}</resources>
						</baseResource>
					</webAppConfig>
				</configuration>
			</plugin>

			<!-- Eclipse Webapp -->
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<wtpapplicationxml>true</wtpapplicationxml>
					<wtpmanifest>false</wtpmanifest>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<projectNameTemplate>[artifactId]-[version]</projectNameTemplate>
					<manifest>${basedir}/src/main/resources/META-INF/MANIFEST.MF</manifest>
				</configuration>
			</plugin>
			<!-- Tomcat -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<url>${tomcat.manager.url}</url>
					<server>masquerade-tomcat</server>
					<path>/masquerade</path>
				</configuration>
			</plugin>
			<!-- Updates Vaadin 6.2+ widgetset definitions based on project dependencies -->
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<configuration>
							<!-- if you don't specify any modules, the plugin will find them -->
							<!-- <modules> <module>${package}.gwt.MyWidgetSet</module> </modules> -->
						</configuration>
						<goals>
							<goal>update-widgetset</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Compiles your custom GWT components with the GWT compiler -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.1.0-1</version>
				<configuration>
					<!-- if you don't specify any modules, the plugin will find them -->
					<!--modules> .. </modules -->
					<webappDirectory>${project.build.directory}/${project.build.finalName}/VAADIN/widgetsets</webappDirectory>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
					<runTarget>clean</runTarget>
					<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
					<noServer>true</noServer>
					<port>8080</port>
					<soyc>false</soyc>
					<gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>resources</goal>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<!-- Vaadin -->
		<repository>
			<id>vaadin-snapshots</id>
			<url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<!-- db4o -->
		<repository>
			<id>source.db4o</id>
			<url>http://source.db4o.com/maven</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- Vaadin -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.5.5</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>customfield</artifactId>
			<version>0.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.vaadin.addons</groupId>
			<artifactId>codemirror</artifactId>
			<version>0.9.3</version>
		</dependency>
		<!-- This is also used by gwt-maven-plugin to deduce GWT version number. -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>2.1.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- db4o -->
		<dependency>
			<groupId>com.db4o</groupId>
			<artifactId>db4o-full-java5</artifactId>
			<version>8.1-SNAPSHOT</version>
		</dependency>
		<!-- commons-lang -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.5</version>
		</dependency>
		<!-- commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.0.1</version>
		</dependency>
		<!-- commons-net -->
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>2.2</version>
		</dependency>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>provided</scope>
		</dependency>
		<!-- Spring JMS -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>3.0.5.RELEASE</version>
		</dependency>
		<!-- JMS -->
		<dependency>
			<groupId>javax.jms</groupId>
			<artifactId>jms</artifactId>
			<version>1.1</version>
		</dependency>
		<!-- Groovy -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>1.7.10</version>
		</dependency>
		<!-- JRuby -->
		<dependency>
			<groupId>org.jruby</groupId>
			<artifactId>jruby-complete</artifactId>
			<version>1.6.1</version>
		</dependency>
		<!-- Embedded Jetty -->
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>7.4.0.v20110414</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-webapp</artifactId>
			<version>7.4.0.v20110414</version>
		</dependency>
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
	</dependencies>

	<scm>
		<connection>scm:git:git@github.com:matf/masquerade.git</connection>
		<url>scm:git:git@github.com:matf/masquerade.git</url>
		<developerConnection>scm:git:git@github.com:matf/masquerade.git</developerConnection>
	</scm>
</project>
